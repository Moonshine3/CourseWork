{"ast":null,"code":"import { $authHost, $host } from \"./index\";\nexport const createType = async type => {\n  const {\n    data\n  } = await $authHost.post('api/type', type);\n  return data;\n};\nexport const fetchTypes = async () => {\n  const {\n    data\n  } = await $host.get('api/type');\n  return data;\n};\nexport const createBrand = async brand => {\n  const {\n    data\n  } = await $authHost.post('api/brand', brand);\n  return data;\n};\nexport const fetchBrands = async () => {\n  const {\n    data\n  } = await $host.get('api/brand');\n  return data;\n};\nexport const createCosmetics = async cosmetics => {\n  const {\n    data\n  } = await $authHost.post('api/cosmetics', cosmetics);\n  return data;\n};\nexport const fetchCosmetics = async (typeId, brandId, page, limit = 5) => {\n  const {\n    data\n  } = await $host.get('api/cosmetics', {\n    params: {\n      typeId,\n      brandId,\n      page,\n      limit\n    }\n  });\n  return data;\n};\nexport const fetchOneCosmetics = async id => {\n  const {\n    data\n  } = await $host.get('api/cosmetics/' + id);\n  return data;\n};","map":{"version":3,"names":["$authHost","$host","createType","type","data","post","fetchTypes","get","createBrand","brand","fetchBrands","createCosmetics","cosmetics","fetchCosmetics","typeId","brandId","page","limit","params","fetchOneCosmetics","id"],"sources":["C:/Users/artam/WebstormProjects/SkinCareShop/client/src/http/cosmeticsAPI.js"],"sourcesContent":["import {$authHost, $host} from \"./index\";\r\n\r\nexport const createType = async (type) => {\r\n    const {data} = await $authHost.post('api/type', type)\r\n    return data\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const {data} = await $host.get('api/type')\r\n    return data\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const {data} = await $authHost.post('api/brand', brand)\r\n    return data\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const {data} = await $host.get('api/brand', )\r\n    return data\r\n}\r\n\r\nexport const createCosmetics = async (cosmetics) => {\r\n    const {data} = await $authHost.post('api/cosmetics', cosmetics)\r\n    return data\r\n}\r\n\r\nexport const fetchCosmetics = async (typeId, brandId, page, limit= 5) => {\r\n    const {data} = await $host.get('api/cosmetics', {params: {\r\n            typeId, brandId, page, limit\r\n        }})\r\n    return data\r\n}\r\n\r\nexport const fetchOneCosmetics = async (id) => {\r\n    const {data} = await $host.get('api/cosmetics/' + id)\r\n    return data\r\n}\r\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,KAAK,QAAO,SAAS;AAExC,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAM;IAACC;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,UAAU,EAAEF,IAAI,CAAC;EACrD,OAAOC,IAAI;AACf,CAAC;AAED,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAM;IAACF;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,UAAU,CAAC;EAC1C,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMI,WAAW,GAAG,MAAOC,KAAK,IAAK;EACxC,MAAM;IAACL;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,WAAW,EAAEI,KAAK,CAAC;EACvD,OAAOL,IAAI;AACf,CAAC;AAED,OAAO,MAAMM,WAAW,GAAG,MAAAA,CAAA,KAAY;EACnC,MAAM;IAACN;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,WAAa,CAAC;EAC7C,OAAOH,IAAI;AACf,CAAC;AAED,OAAO,MAAMO,eAAe,GAAG,MAAOC,SAAS,IAAK;EAChD,MAAM;IAACR;EAAI,CAAC,GAAG,MAAMJ,SAAS,CAACK,IAAI,CAAC,eAAe,EAAEO,SAAS,CAAC;EAC/D,OAAOR,IAAI;AACf,CAAC;AAED,OAAO,MAAMS,cAAc,GAAG,MAAAA,CAAOC,MAAM,EAAEC,OAAO,EAAEC,IAAI,EAAEC,KAAK,GAAE,CAAC,KAAK;EACrE,MAAM;IAACb;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,eAAe,EAAE;IAACW,MAAM,EAAE;MACjDJ,MAAM;MAAEC,OAAO;MAAEC,IAAI;MAAEC;IAC3B;EAAC,CAAC,CAAC;EACP,OAAOb,IAAI;AACf,CAAC;AAED,OAAO,MAAMe,iBAAiB,GAAG,MAAOC,EAAE,IAAK;EAC3C,MAAM;IAAChB;EAAI,CAAC,GAAG,MAAMH,KAAK,CAACM,GAAG,CAAC,gBAAgB,GAAGa,EAAE,CAAC;EACrD,OAAOhB,IAAI;AACf,CAAC"},"metadata":{},"sourceType":"module"}